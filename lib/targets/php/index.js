// Generated by CoffeeScript 1.6.1
(function() {

  module.exports = {
    Nodes: require("./nodes"),
    Blocks: require("./blocks"),
    /*
    The default file extension for templates of this type
    */

    extname: ".php",
    /*
    The pattern to use when looking for templates
    */

    pattern: /^template\.html$/,
    /*
    Combine the given (parsed, processed) files into one
    */

    combine: function(files, templates) {
      var content, data, file, wrapped, _i, _len;
      if (templates == null) {
        templates = {};
      }
      data = [];
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        wrapped = [];
        content = [];
        if (templates.header) {
          content.push(templates.header(file));
        }
        content.push(String(file.ast));
        if (templates.footer) {
          content.push(templates.footer(file));
        }
        if (templates.combinedHeader) {
          wrapped.push(templates.combinedHeader(file));
        }
        wrapped.push(content.join(""));
        if (templates.combinedFooter) {
          wrapped.push(templates.combinedFooter(file));
        }
        data.push(wrapped.join("\n"));
      }
      return data.join("\n\n");
    },
    /*
    The templates that should be used to wrap the contents
    */

    templates: {
      header: "<?php\n  /**\n   * WARNING: This file has been generated from a template. Changes you make here WILL be overridden.\n   * @view {{id}}\n   * @template {{folder}}/{{name}}{{extname}}\n   *\n   * @var mixed $scope The data scope\n   */\n?>",
      footer: "",
      combinedHeader: "<?php $this->defineView(\"{{id}}\", function($scope) {\nob_start();\n?>",
      combinedFooter: "<?php\nreturn ob_get_clean();\n});?>"
    }
  };

}).call(this);
