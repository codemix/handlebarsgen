// Generated by CoffeeScript 1.6.1
(function() {
  var Generator, Handlebars, Parser, PostProcessor, Targets;

  Handlebars = require("handlebars");

  Parser = require("./parser");

  PostProcessor = require("./post-processor");

  Targets = require("./targets");

  module.exports = Generator = (function() {
    /*
    Initialize the generator
    */

    function Generator(config) {
      var attribute, value;
      if (config == null) {
        config = {};
      }
      for (attribute in config) {
        value = config[attribute];
        this[attribute] = value;
      }
      this.target || (this.target = Targets.php);
      this.postProcessor || (this.postProcessor = new PostProcessor(this.target));
    }

    /*
    Parse the input and return an AST that can be rendered
    as the target language.
    */


    Generator.prototype.generate = function(input) {
      return this.postProcessor.postprocess(Parser.parse(input));
    };

    /*
    Compile the wrapper templates
    */


    Generator.prototype.compileWrapperTemplates = function() {
      var name, source, templates, _ref;
      templates = {};
      _ref = this.target.templates;
      for (name in _ref) {
        source = _ref[name];
        if (source) {
          templates[name] = Handlebars.compile(source);
        }
      }
      return templates;
    };

    /*
    Wrap the given file in header and footer templates
    */


    Generator.prototype.wrapFile = function(file, templates) {
      var data;
      if (templates == null) {
        templates = {};
      }
      data = [];
      if (templates.header != null) {
        data.push(templates.header(file));
      }
      data.push(String(file.ast));
      if (templates.footer != null) {
        data.push(templates.footer(file));
      }
      return data.join('');
    };

    return Generator;

  })();

}).call(this);
